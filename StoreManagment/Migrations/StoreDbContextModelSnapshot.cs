// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StoreManagment.Models;

#nullable disable

namespace StoreManagment.Migrations
{
    [DbContext(typeof(StoreDbContext))]
    partial class StoreDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.30")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("StoreManagment.Models.Add_ItemModel", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemId"), 1L, 1);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<DateTime?>("Item_Expiry_Date")
                        .HasColumnType("datetime2")
                        .HasColumnName("Item_Expiry_Date");

                    b.Property<string>("Item_Name")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Item_Name");

                    b.Property<int?>("Item_Price")
                        .HasColumnType("int")
                        .HasColumnName("Item_Price");

                    b.Property<int?>("Item_Quantity")
                        .HasColumnType("int")
                        .HasColumnName("Item_Quantity");

                    b.Property<int?>("Item_Selling_Price")
                        .HasColumnType("int")
                        .HasColumnName("Item_Selling_Price");

                    b.Property<string>("Item_SerialNumber")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Item_SerialNumber");

                    b.Property<int?>("P_Id")
                        .HasColumnType("int");

                    b.Property<int>("S_P_Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("ItemId");

                    b.HasIndex("P_Id");

                    b.HasIndex("S_P_Id");

                    b.ToTable("Tbl_AddItem");
                });

            modelBuilder.Entity("StoreManagment.Models.Add_Sub_ProductModel", b =>
                {
                    b.Property<int>("Sub_P_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Sub_P_Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CreatedDate");

                    b.Property<int>("P_Id")
                        .HasColumnType("int");

                    b.Property<string>("Sub_Product_Name")
                        .HasColumnType("varchar(150)")
                        .HasColumnName("Sub_Product_Name");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("Sub_P_Id");

                    b.HasIndex("P_Id");

                    b.ToTable("Tbl_Add_SubProduct");
                });

            modelBuilder.Entity("StoreManagment.Models.AddProduct", b =>
                {
                    b.Property<int>("P_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("P_Id"), 1L, 1);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("CreateDated");

                    b.Property<string>("Product_Category")
                        .HasColumnType("varchar(150)")
                        .HasColumnName("Product_Category");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("UpdatedDate");

                    b.HasKey("P_Id");

                    b.ToTable("Tbl_Add_Product");
                });

            modelBuilder.Entity("StoreManagment.Models.RegistrationModel", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Email");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Name");

                    b.Property<string>("Password")
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Password");

                    b.Property<long?>("Phone_Num")
                        .HasColumnType("bigint")
                        .HasColumnName("Phone_Num");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Role");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId");

                    b.ToTable("Tbl_Registration");
                });

            modelBuilder.Entity("StoreManagment.Models.Add_ItemModel", b =>
                {
                    b.HasOne("StoreManagment.Models.AddProduct", "AddProduct")
                        .WithMany("AddItems")
                        .HasForeignKey("P_Id");

                    b.HasOne("StoreManagment.Models.Add_Sub_ProductModel", "Add_Sub_ProductModel")
                        .WithMany("AddItems")
                        .HasForeignKey("S_P_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AddProduct");

                    b.Navigation("Add_Sub_ProductModel");
                });

            modelBuilder.Entity("StoreManagment.Models.Add_Sub_ProductModel", b =>
                {
                    b.HasOne("StoreManagment.Models.AddProduct", "AddProduct")
                        .WithMany("SubProducts")
                        .HasForeignKey("P_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AddProduct");
                });

            modelBuilder.Entity("StoreManagment.Models.Add_Sub_ProductModel", b =>
                {
                    b.Navigation("AddItems");
                });

            modelBuilder.Entity("StoreManagment.Models.AddProduct", b =>
                {
                    b.Navigation("AddItems");

                    b.Navigation("SubProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
